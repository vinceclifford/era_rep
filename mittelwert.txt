mittelwert: 
    push ebp 
    push ebx 
    push eax
    push ecx 
    push edx
    mov ecx, 0 
    mov ebx, 0 
    mov ebp, esp
    mov eax, [ebp + 12] 

loop: 
    cmp DWORD [eax],  0
    jz divide 
    add ecx, [eax]
    add eax, 4
    inc ebx 
    jmp loop

divide: 
    cmp ebx, 0 
    je zero: 
    mov edx, 0
    mov eax, ecx
    idiv ebx
    mov [ebp + 8], eax
    jmp push_and_pop

zero: 
    mov [ebp + 8], DWORD 0 

 push_and_pop: 
    pop edx 
    pop ecx 
    pop eax
    pop ebx
    pop ebp 
    ret 