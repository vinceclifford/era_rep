find_biggest: 
    push ebx      
    push esi 

beginning_loop: 
    cmp DWORD [eax], 0 
    jnz reset_esi_and_save_element 
    inc esi 
    cmp esi, 2 
    jz end_of_program
    jmp dont_reset_esi 

reset_esi_and_save_element:
    mov esi, 0 
    mov ebx, [eax]

dont_reset_esi_and_next_adress: 
    add eax, 4 
    jmp beginning_loop

end_of_program: 
    cmp ebx, 0 
    jge dont_negate: 
    neg ebx
    dont_negate
    mov eax, ebx 
    pop ebx 
    pop esi 
    ret