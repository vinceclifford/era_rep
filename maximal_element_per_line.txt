maximal_element_per_line: 
    push ebx ; this is the accumulator 
    push ecx ; maximum guy line 
    push esi ; how many zeros ive already seen 
    push edx  
    push edi ; amount of lines ive seen 
    xor ebx, ebx 
    xor ecx, ecx 

beginning_loop: 
    cmp DWORD [eax], 0 
    jne number_looking_at_not_zero
    inc esi 
    inc edi
    cmp esi, 2 
    je divide 
    cmp esi, 1 
    je set_up_for_new_line

number_looking_at_not_zero: 
    mov esi, 0
    cmp ecx, [eax] 
    jge next_adress
    mov ecx, [eax] 
    jmp next_adress

set_up_for_new_line: 
    add ebx, ecx 
    xor ecx, ecx

next_adress: 
    add eax, 4 
    jmp beginning_loop

divide: 
    xor edx, edx 
    mov eax, ecx
    div edi 
    pop edi 
    pop edx 
    pop esi 
    pop ecx
    pop ebx 
    ret