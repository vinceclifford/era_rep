check_bf_validity: 
    push ebx 
    mov bl BYTE [eax]
    mov ecx, 1 

    cmp bl, 0 
    je end_check_validity
    cmp bl, 44 
    je valid_character  
    cmp bl, 46 
    je valid_character  
    cmp bl, 60 
    je valid_character  
    cmp bl, 62  
    je valid_character  
    cmp bl, 43 
    je valid_character  
    cmp bl, 45  
    je valid_character  
    cmp bl, 91  
    je valid_character  
    cmp bl, 93 
    je valid_character  
    mov ecx, 0 
    jmp end_check_validity

valid_character: 
    inc eax
    jmp check_bf_validity 

end_check_validity: 
    pop ebx 


strlength: 
    push ebx 
    xor ebx, ebx 

beginning_loop_strlength: 
    cmp BYTE [eax + ebx], 0 
    je end_of_strlength
    inc ebx
    jmp beginning_loop_strlength

end_of_strlength: 
    mov eax, ebx 
    pop ebx 
    ret 


strcpy: 
    push ecx 

beginning_loop_strcpy: 
    cmp BYTE [eax], 0 
    je end_of_strcpy
    mov cl, [eax]
    mov [ebx], cl 
    inc eax 
    inc ebx 
    jmp beginning_loop_strcpy

end_of_strcpy: 
    mov [ebx], BYTE  0 
    pop ecx 
    ret